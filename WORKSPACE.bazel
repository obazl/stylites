# workspace( name = "tree-sitter" )

load(
    "@rules_rust//rust:repositories.bzl",
    "rules_rust_dependencies",
    "rust_register_toolchains",
)
load(
    "@rules_rust//crate_universe:repositories.bzl",
    "crate_universe_dependencies",
)
load(
    "@rules_rust//crate_universe:defs.bzl",
    "crates_repository",
)
load(
    "@rules_rust//crate_universe:deps_bootstrap.bzl",
    "cargo_bazel_bootstrap",
)
load(
    "@build_bazel_apple_support//lib:repositories.bzl",
    "apple_support_dependencies",
)

apple_support_dependencies()

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2018",
)

crate_universe_dependencies()  # bootstrap = True)

cargo_bazel_bootstrap()  # makes cargo-bazel binary available

## as @cargo_bazel_bootstrap//:cargo-bazel
## add it to generator attrib of crates_repository:
crates_repository(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.lock",
    # lockfile must exist, may be empty
    lockfile = "//:cargo-bazel-lock.json",
    generator = "@cargo_bazel_bootstrap//:cargo-bazel",
    manifests = [
        "//:Cargo.toml",
        "//cli:Cargo.toml",
        "//cli/config:Cargo.toml",
        "//cli/src/tests/proc_macro:Cargo.toml",
        "//lib:Cargo.toml",
        # "//cli/loader:Cargo.toml",
        # "//highlight:Cargo.toml",
        # "//tags:Cargo.toml",
    ],
    supported_platform_triples = ["aarch64-apple-darwin"],
)

load(
    "@crate_index//:defs.bzl",
    cargo_local_crate_repositories = "crate_repositories",
)

cargo_local_crate_repositories()
